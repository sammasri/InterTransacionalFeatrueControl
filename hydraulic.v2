{
  "cells": [
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "cellView": "form",
        "id": "6mYSH1yDOwvw"
      },
      "outputs": [],
      "source":  [
        "\n",
        "# Search\n",
        "#@markdown \n",
        "\n",
        "Type = Season # [\"General\", \"Movie\", \"Show\", \"Season\", \"Episode\", \"Album\", \"Track\"] {type:\"raw\"}\n",
        "Site = l337x # ['l337x'] {type:\"string\"}\n",
        "Search = \"black mirror s05\" # {type:\"string\"}\n",
        "Page = 1 # {type:\"integer\"}\n",
        "Category = \"TV\" # [\"All\",\"Movies\", \"TV\", \"Apps\", \"Games\"]\n",
        "Sort = \"By Seeders\"  # [\"By Seeders\", \"By Time\", \"By Size\"]\n",
        "Order = \"Descending\" # [\"Descending\", \"Ascending\"]\n",
        "Save_Name = \"\" # {type:\"string\"}\n",
        "Replace = False # {type:\"boolean\"}\n",
        "Backup = True  \n",
        "Partial = False # {type:\"boolean\"}\n",
        "\n",
        "\n",
        "sort = sort1337x_seeders_desc\n",
        "if Sort == \"By Time\":\n",
        "  if Order == \"Descending\":\n",
        "    sort = sort1337x_time_desc\n",
        "  else:\n",
        "    sort = sort1337x_time_asc\n",
        "elif Sort == \"By Size\":\n",
        "  if Order == \"Descending\":\n",
        "    sort = sort1337x_size_desc\n",
        "  else:\n",
        "    sort = sort1337x_size_asc\n",
        "\n",
        "category = \"\" if Category == \"All\" else Category\n",
        "\n",
        "attrs = DownloadAttrs(type_= Type, save_name = Save_Name, replace= Replace, backup= Backup, partial= Partial)\n",
        "try:\n",
        "  if Search:\n",
        "    search(Site = (Site, False), Search = Search, category = category, attrs = attrs, sort = sort, Page = Page, rarbg_auto = False)\n",
        "  release()\n",
        "except KeyboardInterrupt as k:\n",
        "  k"
      ]
    }
  ],
  "metadata": {
    "colab": {
      "collapsed_sections": [],
      "include_colab_link": true,
      "name": "Hydraulic",
      "provenance": []
    },
    "gpuClass": "standard",
    "kernelspec": {
      "display_name": "Python 3.9.7 64-bit",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.10.11"
    },
    "vscode": {
      "interpreter": {
        "hash": "c347c8f9a7ef94e4c9e03b4513be7835ed18f45b99a2a817fb579f408b867b16"
      }
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}
